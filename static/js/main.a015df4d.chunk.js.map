{"version":3,"sources":["shared/provider/UserProvider.js","view/HomeView.js","shared/api/StarWarsAPI.js","shared/api/service/StarWarsAPIService.js","view/navigationTabViews/GalleryView.js","shared/api/PokemonAPI.js","shared/api/service/PokemonAPIService.js","routes/RoutingPath.js","view/navigationTabViews/NewsView.js","view/navigationTabViews/ShopView.js","hooks/useDebounce.js","view/navigationTabViews/SignInView.js","shared/api/E_COMMERC_API.js","shared/api/service/E_COMMERCE_APIservice.js","view/profiledropdownviews/ProfileView.js","view/profiledropdownviews/SettingsView.js","view/profiledropdownviews/SavedProductsView.js","view/ItemDetail.js","routes/Routes.js","components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.js","components/navigation/mobilenavigation/sidebar/SideBar.js","components/backdrop/BackDrop.js","components/navigation/mobilenavigation/MobileNavigation.js","shared/images/logotype.svg","components/profile/profiledropdown/ProfileDropdown.js","components/profile/Profile.js","components/navigation/desktopnavigation/DesktopNavigation.js","hooks/useWindowDimensions.js","components/navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserProvider","children","useState","authenticatedUser","setAuthenticatedUser","Provider","value","HomeView","StarWarsAPI","Axios","create","baseURL","headers","id","http","get","GalleryView","data","setData","characterID","setCharacterID","fetchData2","a","StarWarsAPIService","response","console","log","onClick","placeholder","onChange","event","target","name","hair_color","gender","PokemonAPI","pokemonName","NewsView","APIData","setAPIData","loading","setLoading","history","useHistory","fetchData","PokemonAPIService","error","useEffect","results","map","x","push","RoutingPath","displayData","ShopView","search","setSearch","debounceSearchTerm","delay","debounceValue","setDebounceValue","handler","setTimeout","clearTimeout","useDebounce","height","weight","types","type","SignInView","username","setUsername","useContext","localStorage","setItem","E_COMMERCE_API","ProfileView","serverResponse","setServerResponse","E_COMMERCE_APIservice","SettingsView","SavedProductsView","ItemDetail","location","useLocation","state","url","src","sprites","front_default","alt","Routes","navigateToViewIfAuthenticated","getLocalStorage","getItem","checkIfUserIsAuthenticated","exact","path","component","authenticatedRequired","HamburgerButton","drawerHandler","className","SideBar","drawerIsOpen","BackDrop","MobileNavigation","openDrawer","setOpenDrawer","ProfileDropdown","removeItem","Profile","DesktopNavigation","routingPath","logotype","getWindowDimensions","window","width","innerWidth","innerHeight","Navigation","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a015df4d.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react'\n\n// referensen till det globala vÃ¤rdet\nexport const UserContext = createContext(null);\n\nexport const UserProvider = ({children}) => {\n    const [authenticatedUser, setAuthenticatedUser] = useState()\n\n    return (\n        <UserContext.Provider value={[authenticatedUser, setAuthenticatedUser]}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n","export const HomeView = () => {\n    return (\n        <div>\n            <h1>This is the homeview</h1>\n        </div>\n    )\n}\n","import Axios from 'axios'\n\nconst API_URL = 'https://swapi.dev/api'\n\nconst StarWarsAPI = Axios.create({\n    baseURL: API_URL,\n    headers: { 'Content-Type': 'application/json' }\n})\n\n// genom export default krÃ¤vs inte klamrar vid import\nexport default StarWarsAPI ","import http from '../StarWarsAPI'\n\nconst getLukeSkywalker = () => {\n    return http.get('/people/1')\n}\n\nconst getStarWarsCharacter = (id) => {\n    return http.get(`/people/${id}`)\n}\n\nexport default {\n     getLukeSkywalker,\n     getStarWarsCharacter\n}","import { useState } from 'react'\nimport StarWarsAPIService from '../../shared/api/service/StarWarsAPIService'\n\nexport const GalleryView = () => {\n    const [data, setData] = useState()\n    const [characterID, setCharacterID] = useState()\n\n    // inte rekommenderat skapa globala vÃ¤rden genom att utnyttja local storage\n    // kan ske renderingsfel - om man uppdaterar vÃ¤rdet manuellt, kommer det troligen inte uppdateras pÃ¥ sidan\n    // const username = localStorage.getItem('username')\n\n    // const fetchData = () => {\n    //     // http-adress till data - get hÃ¤mtar data\n    //     Axios.get('https://swapi.dev/api/people/1')\n    //         // eftersom asynkront, fÃ¶rst nÃ¤r data hÃ¤mtats - response loggas = hÃ¤mtad data visas i console\n    //         .then(response => { console.log(response) })\n    //         // om servern ligger nere - error-message loggas\n    //         .catch(error => { console.log(error) })\n    // }\n\n    // Async-await varianten\n    const fetchData2 = async () => {\n        // async-await motsvarighet till .catch = try/catch-statement\n        try {\n            // talar om att funktionen ska vara asynkron och vÃ¤nta pÃ¥ att detta anrop ska kÃ¶ras fÃ¤rdig och sedan lagra objektet som returneras inuti response\n            const response = await StarWarsAPIService.getStarWarsCharacter(characterID)\n            setData(response.data)\n        } catch (error) {\n            console.log('error occured: ', error)\n        } \n    }\n\n    return (\n        <div>\n            {/* <h1>{username}</h1> */}\n            <button onClick={() => fetchData2()}>make api call</button>\n            <button onClick={() => console.log(data)}>check my state</button>\n            <input placeholder='search for character ID' onChange={event => setCharacterID(event.target.value)} /> \n           {/* optional chaining - ? */}\n            <h1>{data?.name}</h1>\n            <h1>{data?.hair_color}</h1>\n            <h1>{data?.gender}</h1>\n        </div>\n    )\n}\n\n","import Axios from 'axios'\n\nconst API_URL = 'https://pokeapi.co/api/v2'\n\nconst PokemonAPI = Axios.create({\n    baseURL: API_URL,\n    headers: { 'Content-Type': 'application/json' }\n})\n\n// genom export default krÃ¤vs inte klamrar vid import\nexport default PokemonAPI ","import http from '../PokemonAPI'\n\nconst getCharacterDitto = () => {\n    return http.get('pokemon/ditto')\n}\n\nconst searchCharacter = (pokemonName) => {\n    return http.get(`pokemon/${pokemonName}`)\n}\n\nconst get100Pokemons = () => {\n    return http.get('pokemon?limit=100')\n}\n\nexport default {\n    getCharacterDitto,\n    searchCharacter,\n    get100Pokemons\n}","const homeView = '/';\nconst galleryView = '/gallery';\nconst newsView = '/news';\nconst shopView = '/shop';\nconst signInView = '/signin';\nconst profileView = '/profile';\nconst settingsView = \"/settings\";\nconst savedProductsView = \"/savedproducts\";\nconst itemDetailView = '/itemdetail'\n\nexport default {\n    homeView,\n    galleryView,\n    newsView,\n    signInView,\n    shopView,\n    profileView,\n    settingsView,\n    savedProductsView,\n    itemDetailView\n}","import PokemonAPIService from '../../shared/api/service/PokemonAPIService'\nimport { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport RoutingPath from '../../routes/RoutingPath'\n\n\nexport const NewsView = () => {\n    // SÃ¤tt initial value till tom array fÃ¶r att kunna exekvera map i displayData\n    const [APIData, setAPIData] = useState([])\n    const [loading, setLoading] = useState(true)\n    const history = useHistory()\n\n    const fetchData = async () => {\n        try {\n            const { data } = await PokemonAPIService.get100Pokemons()\n            setAPIData(data)\n                setLoading(false)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    })\n\n    const displayData = () => {\n        if (!loading) {\n        return APIData?.results?.map((x) =>\n            <div key={x.name}>\n                <h1 onClick={() => history.push(RoutingPath.itemDetailView, x)}>{x.name}</h1>\n            </div>\n        )}\n    }\n\n    return (\n        <div>\n            <h1 onClick={() => console.log(APIData)}>news view</h1>\n            {displayData()}\n        </div>\n    )\n}\n","// import { useEffect, useState } from 'react'\n\nimport PokemonAPIService from \"../../shared/api/service/PokemonAPIService\"\nimport { useState, useEffect } from 'react'\nimport { useDebounce } from '../../hooks/useDebounce'\n\nexport const ShopView = () => {\n//     const [counter, setCounter] = useState(0)\n// useEffect(() => {\n//     alert('first render')\n//     return () => { \n//         { alert('last render')}\n//     }\n// }, [counter])\n    const [data, setData] = useState()\n    const [search, setSearch] = useState('')\n    const debounceSearchTerm = useDebounce(search, 2000)\n\n    const fetchData = async (x) => {\n        if (debounceSearchTerm) {\n        const { data } = await PokemonAPIService.searchCharacter(x)\n        setData(data)\n        } \n    }\n\n    useEffect(() => {\n        fetchData(search)\n    }, [debounceSearchTerm])\n\n    return (\n        <div>\n             <input placeholder='search for pokemon' onChange={event => setSearch(event.target.value)}/>\n            {/* <h1 onClick={() => setCounter(counter + 1)}>{counter}</h1> */}\n            {/* <button onClick={() => fetchData(search)}>Get Data</button>\n            <button onClick={() => console.log(data)}>Show State Data</button> */}\n            <h1>Name: {data?.name}</h1>\n            <h1>Height: {data?.height}</h1>\n            <h1>Weight: {data?.weight}</h1>\n            <h1>Id: {data?.id}</h1>\n            <h1>Type: {data?.types?.[0]?.type?.name}</h1>\n        </div>\n    )\n}\n\n\n// Det fÃ¶rsta som kommer ske nÃ¤r komponent ShopView renderas\n// Viktig funktion, kan anvÃ¤ndas till tex. API-anrop\n// useEffect (() => { alert(\"first render\")})","import { useState, useEffect } from 'react'\n\nexport const useDebounce = (value, delay) => {\n    const [debounceValue, setDebounceValue] = useState(value)\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebounceValue(value)\n        }, delay)\n        return () => { clearTimeout(handler) }\n    }, [value])\n\n\n    return debounceValue\n}","import { useState, useContext } from 'react'\nimport { UserContext } from '../../shared/provider/UserProvider'\nimport { useHistory } from 'react-router-dom'\nimport RoutingPath from '../../routes/RoutingPath'\n\nexport const SignInView = () => {\n    // states\n    const history = useHistory()\n    const [username, setUsername] = useState('')\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n\n    const signIn = () => {\n        setAuthenticatedUser(username)\n        localStorage.setItem('username', username)\n        history.push(RoutingPath.homeView)\n    }\n    \n    // FRÃN GENOMGÃNG 3\n    // const [username, setUsername] = useState('BjÃ¶rn');\n    // const [password, setPassword] = useState('');\n\n    // const saveDataToBrowser = () => {\n    //     localStorage.setItem('username', 'bjÃ¶rn');\n    // }\n\n    // const removeDataFromeBrowser = () => {\n    //     localStorage.removeItem('username');\n    // }\n\n    return (\n        <div>\n            <span>Username: </span><input onChange={event => setUsername(event.target.value)} /> <br />\n            <button onClick={() => signIn()}>Sign in</button>\n            {/* <h1>{username}</h1>\n            <h1>display password: {password}</h1> */}\n            {/* <span>Username: </span><input onChange={event => setUsername(event.target.value)} /> <br />\n            <span>Password: </span><input onChange={event => setPassword(event.target.value)} /> */}\n            {/* <button onClick={() => saveDataToBrowser()}>SaveDataToButton</button>\n            <button onClick={() => removeDataFromeBrowser()}>removeDataFromBrowser</button> */}\n        </div>\n    )\n};  \n\n\n\n\n//     const [loading, setLoading] = useState(false);\n\n//     const displayData = () => {\n//         if (loading) {\n//             return (\n//                 <div>\n//                     <h1>{username}</h1>\n//                     <button onClick={() => setUsername('randomName')}>Update state value</button>\n//                 </div>\n//             )\n//         }\n//     }\n//     return (\n//         <div>\n//             {/* !loading = det motsatta vÃ¤rdet frÃ¥n nuvarande > typ toggle-effekt alltsÃ¥ */}\n//             <h1 onClick={() => setLoading(!loading)}>Show the data baby</h1>\n//             {displayData()}\n//         </div>\n//     )\n// }","import Axios from 'axios'\n\nconst productionAPI = ''\nconst developmentAPI = 'http://localhost:3001'\n\nconst E_COMMERCE_API = Axios.create({\n    baseURL: developmentAPI\n})\n\nexport default E_COMMERCE_API","import http from '../E_COMMERC_API'\n\nconst getAllUsers = () => {\n    return http.get('/user')\n}\n\nexport default {\n    getAllUsers\n}","import E_COMMERCE_APIservice from \"../../shared/api/service/E_COMMERCE_APIservice\"\nimport { useState } from 'react'\n\n\nexport const ProfileView = () => {\n    const [serverResponse, setServerResponse] = useState([])\n\n    const fetchData = async () => {\n        const { data } = await E_COMMERCE_APIservice.getAllUsers()\n        setServerResponse(data)\n        console.log(data)\n    }\n\n    const displayData = () => {\n        return (\n            serverResponse.map((x) => <h1>{x.username}</h1>)\n        )\n    }\n\n    return (\n        <div>\n            <button onClick={() => fetchData()}>Make call to backend</button>\n            {displayData()}\n        </div>\n    )\n}\n","export const SettingsView = () => {\n    return (\n        <div>\n            <h1>This is the settings view</h1>\n        </div>\n    )\n}\n","export const SavedProductsView = () => {\n    return (\n        <div>\n            <h1>This is the saved products view</h1>\n        </div>\n    )\n}\n","import { useLocation } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport Axios from 'axios'\n\nexport const ItemDetail = () => {\n    const [APIData, setAPIData] = useState()\n    const [loading, setLoading] = useState(true)\n    const location = useLocation()\n\n    const fetchData = async () => {\n        try {\n            const { data } = await Axios.get(location.state.url)\n            setAPIData(data)\n            setLoading(false)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const displayData = () => {\n        if (!loading) {\n            return (\n                <>\n                    {/* <button onClick={() => console.log(APIData)}>show location</button> */}\n                    {/* bildfil i  */}\n                    <img src={APIData?.sprites.front_default} alt={'error'} />\n                    <h1>Name: {APIData?.name}</h1>\n                    <h1>Height: {APIData?.height}</h1>\n                </>\n            )\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    })\n\n    return (\n        loading ? <h1>LOADING!!!</h1>\n            : <div>\n                {displayData()}\n            </div>\n    )\n}","import React, { useContext, useEffect } from 'react'\nimport { UserContext } from '../shared/provider/UserProvider'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { HomeView } from '../view/HomeView'\nimport { GalleryView } from '../view/navigationTabViews/GalleryView'\nimport { NewsView } from '../view/navigationTabViews/NewsView'\nimport { ShopView } from '../view/navigationTabViews/ShopView'\nimport { SignInView } from '../view/navigationTabViews/SignInView'\nimport { ProfileView } from '../view/profiledropdownviews/ProfileView'\nimport { SettingsView } from '../view/profiledropdownviews/SettingsView'\nimport { SavedProductsView } from '../view/profiledropdownviews/SavedProductsView'\nimport { ItemDetail } from '../view/ItemDetail'\n\n\nimport RoutingPath from './RoutingPath'\n\nexport const Routes = ({ children }) => {\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n\n    const blockRouteIfAuthenticated = (navigateToViewIfAuthenticated) => {\n        return authenticatedUser ? HomeView : navigateToViewIfAuthenticated\n    }\n\n    const authenticatedRequired = (navigateToViewIfAuthenticated) => {\n        return authenticatedUser ? navigateToViewIfAuthenticated : SignInView\n    }\n\n    const checkIfUserIsAuthenticated = () => {\n        const getLocalStorage = localStorage.getItem('username')\n        if (getLocalStorage) {\n            setAuthenticatedUser(getLocalStorage)\n        }\n    }\n\n    // SPARA ANVÃNDARE I BROWSER\n    useEffect(() => {\n        checkIfUserIsAuthenticated()\n    })\n\n    return (\n\n        <BrowserRouter>\n            {children}\n            <Switch>\n                {/* /home kan namnges hursomhelst - detta Ã¤r url-adressen fÃ¶r anvÃ¤ndaren */}\n                {/* <Route exact path={'/test'} component={TestView} /> */}\n                {/* hÃ¤r brukar man ha 404-sida om app kraschar etc. - ingen path = denna sida Ã¤r home, man behÃ¶ver inte navigera till den*/}\n                {/* Detta kallas Fallback-sida - om nÃ¥gon fÃ¶rsÃ¶ker gÃ¥ in pÃ¥ sida som inte finns, skickas tillbaka hit */}\n                <Route exact path={RoutingPath.galleryView} component={GalleryView} />\n                <Route exact path={RoutingPath.newsView} component={NewsView} />\n                <Route exact path={RoutingPath.shopView} component={ShopView} />\n                <Route exact path={RoutingPath.signInView} component={blockRouteIfAuthenticated(SignInView)} />\n                <Route exact path={RoutingPath.settingsView} component={SettingsView} />\n                <Route exact path={RoutingPath.profileView} component={authenticatedRequired(ProfileView)} />\n                <Route exact path={RoutingPath.savedProductsView} component={SavedProductsView} />\n                <Route exact path={RoutingPath.itemDetailView} component={ItemDetail} />\n                <Route component={HomeView} />\n            </Switch>\n        </BrowserRouter>\n\n    )\n}\n","import './HamburgerButton.css'\n\nexport const HamburgerButton = ({drawerHandler}) => {\n    return (\n        <button className=\"toggle-button\" onClick={() => drawerHandler(true)}>\n            <div className=\"toggle-button__line\" />\n            <div className=\"toggle-button__line\" />\n            <div className=\"toggle-button__line\" />\n        </button>\n    )\n}\n\n","import './SideBar.css'\n\nexport const SideBar = ({drawerIsOpen, drawerHandler}) => {\n    return (\n        <nav className={drawerIsOpen ? 'side-drawer open' : 'side-drawer'}>\n            <h1 onClick={() => drawerHandler(false)}>Exit</h1>\n        </nav>\n    )\n}\n","import './BackDrop.css'\n\nexport const BackDrop = () => {\n    return (\n        <div className='backdrop'>\n            \n        </div>\n    )\n}\n","import './MobileNavigation.css'\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\nimport { SideBar } from './sidebar/SideBar'\nimport { useState } from 'react'\nimport { BackDrop } from '../../backdrop/BackDrop'\n\nexport const MobileNavigation = () => {\n    const [openDrawer, setOpenDrawer] = useState(false)\n    return (\n        <div>\n            <HamburgerButton drawerHandler={setOpenDrawer} />\n            <SideBar drawerIsOpen={openDrawer} drawerHandler={setOpenDrawer}/>\n            { !openDrawer || <BackDrop />}\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logotype.a85df0c8.svg\";","import './ProfileDropdown.css'\nimport { useHistory } from 'react-router-dom'\nimport {useContext} from 'react'\nimport RoutingPath from '../../../routes/RoutingPath'\nimport { UserContext } from '../../../shared/provider/UserProvider'\n\nexport const ProfileDropdown = () => {\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n    const history = useHistory()\n\n    const logout = () => {\n        setAuthenticatedUser('')\n        localStorage.removeItem('username')\n        history.push(RoutingPath.homeView)\n    }\n\n    return (\n        <div className='profileDropdownWrapper'>\n            <span>firstname Lastname</span><br />\n            <span>Email</span>\n            <hr /> \n            <span onClick={() => history.push(RoutingPath.profileView)}>Profile</span> <br/>\n            <span onClick={() => history.push(RoutingPath.settingsView)}>Settings</span><br/>\n            <span onClick={() => history.push(RoutingPath.savedProductsView)}>Saved Products</span> <br/>\n            <span>Language: SE</span><br/>\n            <span onClick={() => logout()}>Logout</span>\n        </div>\n    )\n}\n","import { useContext } from 'react'\nimport { UserContext } from '../../shared/provider/UserProvider'\nimport './Profile.css' \nimport { ProfileDropdown } from './profiledropdown/ProfileDropdown'\n\nexport const Profile = () => {\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n\n    return (\n        <div className='profileWrapper'>\n            <img className='profileImg' src={'https://thispersondoesnotexist.com/image'} alt={'error..'} />\n            <span>{authenticatedUser}</span>   \n            <ProfileDropdown /> \n        </div>\n    )\n}\n","import './DesktopNavigation.css'\nimport { useHistory } from 'react-router-dom'\nimport logotype from '../../../shared/images/logotype.svg'\nimport routingPath from '../../../routes/RoutingPath'\nimport { useContext } from 'react'\nimport { UserContext } from '../../../shared/provider/UserProvider'\nimport { Profile } from '../../../components/profile/Profile'\n\nexport const DesktopNavigation = () => {\n    const history = useHistory()\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n\n// const displayAuthUserOrSignIn = () =>{\n//     if (authenticatedUser) {\n//         return <span className='loggedInUser'> {authenticatedUser} </span>\n//     } else {\n//         return <span className='signInButton' onClick={() => history.push(routingPath.signInView)}>sign In</span>\n//     }\n// }\n\n// exakt samma resultat som funktion ovan, fast m. ternery operator\nconst displayAuthUserOrSignIn2 = () => {\n    return authenticatedUser\n        // om true, kÃ¶rs kod efter frÃ¥getecken\n        ? <span className='authUserNavigation'> <Profile /> </span>\n        : <span className='signInButton' onClick={() => history.push(routingPath.signInView)}>sign In</span>\n}\n    return (\n        <div className='desktopNavigationWrapper'>\n            <img  className='navLogo' onClick={() => history.push (routingPath.homeView)} src={logotype} alt={'error'}></img>\n            <span className='shopButton' onClick={() => history.push(routingPath.shopView)}>shop</span>\n            <span className='galleryButton' onClick={() => history.push(routingPath.galleryView)}>gallery</span>\n            <span className='newsButton' onClick={() => history.push(routingPath.newsView)}>news</span>\n            {displayAuthUserOrSignIn2()}\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window\n    return { width, height }\n}\n\nexport const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n    const handleResize = () => { setWindowDimensions(getWindowDimensions()) }\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n\n    return windowDimensions\n}\n","import { MobileNavigation } from './mobilenavigation/MobileNavigation'\nimport { DesktopNavigation } from './desktopnavigation/DesktopNavigation'\nimport { useWindowDimensions } from '../../hooks/useWindowDimensions'\n\n// denna komponents funktion, enda syftet med denna js-sida, \n// Ã¤r att avgÃ¶ra nÃ¤r desktop-nav och nÃ¤r mobile-nav ska laddas in\n// funktionalitet som kommer lÃ¤ggas till i framtida genomgÃ¥ng\nexport const Navigation = () => {\n    const { width } = useWindowDimensions()\n\n    const navigationViewPort = () => {\n        return width <= 1100 ? <MobileNavigation /> : <DesktopNavigation />\n    }\n\n    return (navigationViewPort())\n}\n\n\n","import { Routes } from './routes/Routes'\nimport { Navigation } from './components/navigation/Navigation'\nimport './shared/global/global.css'\nimport { UserProvider } from './shared/provider/UserProvider'\n\n\n// nya sÃ¤ttet att skriva funktioner - krÃ¤ver mÃ¥sklamrar nÃ¤r app importeras till index.js\nexport const App = () => {\n  return (\n    <UserProvider>\n      <Routes>\n        <Navigation />\n      </Routes>\n    </UserProvider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// mÃ¥sklamrar pga. senaste sÃ¤ttet typa funktioner\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}